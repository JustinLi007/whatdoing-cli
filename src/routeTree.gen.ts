/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as ContentContentsImport } from './routes/content/contents'
import { Route as ContentContentIdImport } from './routes/content/$contentId'

// Create Virtual Routes

const NewContentLazyImport = createFileRoute('/new-content')()
const IndexLazyImport = createFileRoute('/')()
const SignupIndexLazyImport = createFileRoute('/signup/')()
const LoginIndexLazyImport = createFileRoute('/login/')()
const HomeUserIdLazyImport = createFileRoute('/home/$userId')()

// Create/Update Routes

const NewContentLazyRoute = NewContentLazyImport.update({
  id: '/new-content',
  path: '/new-content',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/new-content.lazy').then((d) => d.Route))

const IndexLazyRoute = IndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const SignupIndexLazyRoute = SignupIndexLazyImport.update({
  id: '/signup/',
  path: '/signup/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/signup/index.lazy').then((d) => d.Route))

const LoginIndexLazyRoute = LoginIndexLazyImport.update({
  id: '/login/',
  path: '/login/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/login/index.lazy').then((d) => d.Route))

const HomeUserIdLazyRoute = HomeUserIdLazyImport.update({
  id: '/home/$userId',
  path: '/home/$userId',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/home/$userId.lazy').then((d) => d.Route))

const ContentContentsRoute = ContentContentsImport.update({
  id: '/content/contents',
  path: '/content/contents',
  getParentRoute: () => rootRoute,
} as any)

const ContentContentIdRoute = ContentContentIdImport.update({
  id: '/content/$contentId',
  path: '/content/$contentId',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/new-content': {
      id: '/new-content'
      path: '/new-content'
      fullPath: '/new-content'
      preLoaderRoute: typeof NewContentLazyImport
      parentRoute: typeof rootRoute
    }
    '/content/$contentId': {
      id: '/content/$contentId'
      path: '/content/$contentId'
      fullPath: '/content/$contentId'
      preLoaderRoute: typeof ContentContentIdImport
      parentRoute: typeof rootRoute
    }
    '/content/contents': {
      id: '/content/contents'
      path: '/content/contents'
      fullPath: '/content/contents'
      preLoaderRoute: typeof ContentContentsImport
      parentRoute: typeof rootRoute
    }
    '/home/$userId': {
      id: '/home/$userId'
      path: '/home/$userId'
      fullPath: '/home/$userId'
      preLoaderRoute: typeof HomeUserIdLazyImport
      parentRoute: typeof rootRoute
    }
    '/login/': {
      id: '/login/'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/signup/': {
      id: '/signup/'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof SignupIndexLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexLazyRoute
  '/new-content': typeof NewContentLazyRoute
  '/content/$contentId': typeof ContentContentIdRoute
  '/content/contents': typeof ContentContentsRoute
  '/home/$userId': typeof HomeUserIdLazyRoute
  '/login': typeof LoginIndexLazyRoute
  '/signup': typeof SignupIndexLazyRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexLazyRoute
  '/new-content': typeof NewContentLazyRoute
  '/content/$contentId': typeof ContentContentIdRoute
  '/content/contents': typeof ContentContentsRoute
  '/home/$userId': typeof HomeUserIdLazyRoute
  '/login': typeof LoginIndexLazyRoute
  '/signup': typeof SignupIndexLazyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexLazyRoute
  '/new-content': typeof NewContentLazyRoute
  '/content/$contentId': typeof ContentContentIdRoute
  '/content/contents': typeof ContentContentsRoute
  '/home/$userId': typeof HomeUserIdLazyRoute
  '/login/': typeof LoginIndexLazyRoute
  '/signup/': typeof SignupIndexLazyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/new-content'
    | '/content/$contentId'
    | '/content/contents'
    | '/home/$userId'
    | '/login'
    | '/signup'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/new-content'
    | '/content/$contentId'
    | '/content/contents'
    | '/home/$userId'
    | '/login'
    | '/signup'
  id:
    | '__root__'
    | '/'
    | '/new-content'
    | '/content/$contentId'
    | '/content/contents'
    | '/home/$userId'
    | '/login/'
    | '/signup/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexLazyRoute: typeof IndexLazyRoute
  NewContentLazyRoute: typeof NewContentLazyRoute
  ContentContentIdRoute: typeof ContentContentIdRoute
  ContentContentsRoute: typeof ContentContentsRoute
  HomeUserIdLazyRoute: typeof HomeUserIdLazyRoute
  LoginIndexLazyRoute: typeof LoginIndexLazyRoute
  SignupIndexLazyRoute: typeof SignupIndexLazyRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexLazyRoute: IndexLazyRoute,
  NewContentLazyRoute: NewContentLazyRoute,
  ContentContentIdRoute: ContentContentIdRoute,
  ContentContentsRoute: ContentContentsRoute,
  HomeUserIdLazyRoute: HomeUserIdLazyRoute,
  LoginIndexLazyRoute: LoginIndexLazyRoute,
  SignupIndexLazyRoute: SignupIndexLazyRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/new-content",
        "/content/$contentId",
        "/content/contents",
        "/home/$userId",
        "/login/",
        "/signup/"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/new-content": {
      "filePath": "new-content.lazy.tsx"
    },
    "/content/$contentId": {
      "filePath": "content/$contentId.tsx"
    },
    "/content/contents": {
      "filePath": "content/contents.tsx"
    },
    "/home/$userId": {
      "filePath": "home/$userId.lazy.tsx"
    },
    "/login/": {
      "filePath": "login/index.lazy.tsx"
    },
    "/signup/": {
      "filePath": "signup/index.lazy.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
