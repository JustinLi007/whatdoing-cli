/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as EditIndexImport } from './routes/edit/index'

// Create Virtual Routes

const IndexLazyImport = createFileRoute('/')()
const SignupIndexLazyImport = createFileRoute('/signup/')()
const SearchIndexLazyImport = createFileRoute('/search/')()
const LoginIndexLazyImport = createFileRoute('/login/')()
const DataIndexLazyImport = createFileRoute('/data/')()
const HomeUserIdLazyImport = createFileRoute('/home/$userId')()
const SearchAnimeIndexLazyImport = createFileRoute('/search/anime/')()
const DataAnimeIndexLazyImport = createFileRoute('/data/anime/')()
const EditAnimeAnimeIdLazyImport = createFileRoute('/edit/anime/$animeId')()
const ContentsAnimeAnimeIdLazyImport = createFileRoute(
  '/contents/anime/$animeId',
)()
const EditNewAnimeIndexLazyImport = createFileRoute('/edit/new/anime/')()

// Create/Update Routes

const IndexLazyRoute = IndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const SignupIndexLazyRoute = SignupIndexLazyImport.update({
  id: '/signup/',
  path: '/signup/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/signup/index.lazy').then((d) => d.Route))

const SearchIndexLazyRoute = SearchIndexLazyImport.update({
  id: '/search/',
  path: '/search/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/search/index.lazy').then((d) => d.Route))

const LoginIndexLazyRoute = LoginIndexLazyImport.update({
  id: '/login/',
  path: '/login/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/login/index.lazy').then((d) => d.Route))

const DataIndexLazyRoute = DataIndexLazyImport.update({
  id: '/data/',
  path: '/data/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/data/index.lazy').then((d) => d.Route))

const EditIndexRoute = EditIndexImport.update({
  id: '/edit/',
  path: '/edit/',
  getParentRoute: () => rootRoute,
} as any)

const HomeUserIdLazyRoute = HomeUserIdLazyImport.update({
  id: '/home/$userId',
  path: '/home/$userId',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/home/$userId.lazy').then((d) => d.Route))

const SearchAnimeIndexLazyRoute = SearchAnimeIndexLazyImport.update({
  id: '/search/anime/',
  path: '/search/anime/',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/search/anime/index.lazy').then((d) => d.Route),
)

const DataAnimeIndexLazyRoute = DataAnimeIndexLazyImport.update({
  id: '/data/anime/',
  path: '/data/anime/',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/data/anime/index.lazy').then((d) => d.Route),
)

const EditAnimeAnimeIdLazyRoute = EditAnimeAnimeIdLazyImport.update({
  id: '/edit/anime/$animeId',
  path: '/edit/anime/$animeId',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/edit/anime/$animeId.lazy').then((d) => d.Route),
)

const ContentsAnimeAnimeIdLazyRoute = ContentsAnimeAnimeIdLazyImport.update({
  id: '/contents/anime/$animeId',
  path: '/contents/anime/$animeId',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/contents/anime/$animeId.lazy').then((d) => d.Route),
)

const EditNewAnimeIndexLazyRoute = EditNewAnimeIndexLazyImport.update({
  id: '/edit/new/anime/',
  path: '/edit/new/anime/',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/edit/new/anime/index.lazy').then((d) => d.Route),
)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/home/$userId': {
      id: '/home/$userId'
      path: '/home/$userId'
      fullPath: '/home/$userId'
      preLoaderRoute: typeof HomeUserIdLazyImport
      parentRoute: typeof rootRoute
    }
    '/edit/': {
      id: '/edit/'
      path: '/edit'
      fullPath: '/edit'
      preLoaderRoute: typeof EditIndexImport
      parentRoute: typeof rootRoute
    }
    '/data/': {
      id: '/data/'
      path: '/data'
      fullPath: '/data'
      preLoaderRoute: typeof DataIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/login/': {
      id: '/login/'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/search/': {
      id: '/search/'
      path: '/search'
      fullPath: '/search'
      preLoaderRoute: typeof SearchIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/signup/': {
      id: '/signup/'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof SignupIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/contents/anime/$animeId': {
      id: '/contents/anime/$animeId'
      path: '/contents/anime/$animeId'
      fullPath: '/contents/anime/$animeId'
      preLoaderRoute: typeof ContentsAnimeAnimeIdLazyImport
      parentRoute: typeof rootRoute
    }
    '/edit/anime/$animeId': {
      id: '/edit/anime/$animeId'
      path: '/edit/anime/$animeId'
      fullPath: '/edit/anime/$animeId'
      preLoaderRoute: typeof EditAnimeAnimeIdLazyImport
      parentRoute: typeof rootRoute
    }
    '/data/anime/': {
      id: '/data/anime/'
      path: '/data/anime'
      fullPath: '/data/anime'
      preLoaderRoute: typeof DataAnimeIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/search/anime/': {
      id: '/search/anime/'
      path: '/search/anime'
      fullPath: '/search/anime'
      preLoaderRoute: typeof SearchAnimeIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/edit/new/anime/': {
      id: '/edit/new/anime/'
      path: '/edit/new/anime'
      fullPath: '/edit/new/anime'
      preLoaderRoute: typeof EditNewAnimeIndexLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexLazyRoute
  '/home/$userId': typeof HomeUserIdLazyRoute
  '/edit': typeof EditIndexRoute
  '/data': typeof DataIndexLazyRoute
  '/login': typeof LoginIndexLazyRoute
  '/search': typeof SearchIndexLazyRoute
  '/signup': typeof SignupIndexLazyRoute
  '/contents/anime/$animeId': typeof ContentsAnimeAnimeIdLazyRoute
  '/edit/anime/$animeId': typeof EditAnimeAnimeIdLazyRoute
  '/data/anime': typeof DataAnimeIndexLazyRoute
  '/search/anime': typeof SearchAnimeIndexLazyRoute
  '/edit/new/anime': typeof EditNewAnimeIndexLazyRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexLazyRoute
  '/home/$userId': typeof HomeUserIdLazyRoute
  '/edit': typeof EditIndexRoute
  '/data': typeof DataIndexLazyRoute
  '/login': typeof LoginIndexLazyRoute
  '/search': typeof SearchIndexLazyRoute
  '/signup': typeof SignupIndexLazyRoute
  '/contents/anime/$animeId': typeof ContentsAnimeAnimeIdLazyRoute
  '/edit/anime/$animeId': typeof EditAnimeAnimeIdLazyRoute
  '/data/anime': typeof DataAnimeIndexLazyRoute
  '/search/anime': typeof SearchAnimeIndexLazyRoute
  '/edit/new/anime': typeof EditNewAnimeIndexLazyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexLazyRoute
  '/home/$userId': typeof HomeUserIdLazyRoute
  '/edit/': typeof EditIndexRoute
  '/data/': typeof DataIndexLazyRoute
  '/login/': typeof LoginIndexLazyRoute
  '/search/': typeof SearchIndexLazyRoute
  '/signup/': typeof SignupIndexLazyRoute
  '/contents/anime/$animeId': typeof ContentsAnimeAnimeIdLazyRoute
  '/edit/anime/$animeId': typeof EditAnimeAnimeIdLazyRoute
  '/data/anime/': typeof DataAnimeIndexLazyRoute
  '/search/anime/': typeof SearchAnimeIndexLazyRoute
  '/edit/new/anime/': typeof EditNewAnimeIndexLazyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/home/$userId'
    | '/edit'
    | '/data'
    | '/login'
    | '/search'
    | '/signup'
    | '/contents/anime/$animeId'
    | '/edit/anime/$animeId'
    | '/data/anime'
    | '/search/anime'
    | '/edit/new/anime'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/home/$userId'
    | '/edit'
    | '/data'
    | '/login'
    | '/search'
    | '/signup'
    | '/contents/anime/$animeId'
    | '/edit/anime/$animeId'
    | '/data/anime'
    | '/search/anime'
    | '/edit/new/anime'
  id:
    | '__root__'
    | '/'
    | '/home/$userId'
    | '/edit/'
    | '/data/'
    | '/login/'
    | '/search/'
    | '/signup/'
    | '/contents/anime/$animeId'
    | '/edit/anime/$animeId'
    | '/data/anime/'
    | '/search/anime/'
    | '/edit/new/anime/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexLazyRoute: typeof IndexLazyRoute
  HomeUserIdLazyRoute: typeof HomeUserIdLazyRoute
  EditIndexRoute: typeof EditIndexRoute
  DataIndexLazyRoute: typeof DataIndexLazyRoute
  LoginIndexLazyRoute: typeof LoginIndexLazyRoute
  SearchIndexLazyRoute: typeof SearchIndexLazyRoute
  SignupIndexLazyRoute: typeof SignupIndexLazyRoute
  ContentsAnimeAnimeIdLazyRoute: typeof ContentsAnimeAnimeIdLazyRoute
  EditAnimeAnimeIdLazyRoute: typeof EditAnimeAnimeIdLazyRoute
  DataAnimeIndexLazyRoute: typeof DataAnimeIndexLazyRoute
  SearchAnimeIndexLazyRoute: typeof SearchAnimeIndexLazyRoute
  EditNewAnimeIndexLazyRoute: typeof EditNewAnimeIndexLazyRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexLazyRoute: IndexLazyRoute,
  HomeUserIdLazyRoute: HomeUserIdLazyRoute,
  EditIndexRoute: EditIndexRoute,
  DataIndexLazyRoute: DataIndexLazyRoute,
  LoginIndexLazyRoute: LoginIndexLazyRoute,
  SearchIndexLazyRoute: SearchIndexLazyRoute,
  SignupIndexLazyRoute: SignupIndexLazyRoute,
  ContentsAnimeAnimeIdLazyRoute: ContentsAnimeAnimeIdLazyRoute,
  EditAnimeAnimeIdLazyRoute: EditAnimeAnimeIdLazyRoute,
  DataAnimeIndexLazyRoute: DataAnimeIndexLazyRoute,
  SearchAnimeIndexLazyRoute: SearchAnimeIndexLazyRoute,
  EditNewAnimeIndexLazyRoute: EditNewAnimeIndexLazyRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/home/$userId",
        "/edit/",
        "/data/",
        "/login/",
        "/search/",
        "/signup/",
        "/contents/anime/$animeId",
        "/edit/anime/$animeId",
        "/data/anime/",
        "/search/anime/",
        "/edit/new/anime/"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/home/$userId": {
      "filePath": "home/$userId.lazy.tsx"
    },
    "/edit/": {
      "filePath": "edit/index.tsx"
    },
    "/data/": {
      "filePath": "data/index.lazy.tsx"
    },
    "/login/": {
      "filePath": "login/index.lazy.tsx"
    },
    "/search/": {
      "filePath": "search/index.lazy.tsx"
    },
    "/signup/": {
      "filePath": "signup/index.lazy.tsx"
    },
    "/contents/anime/$animeId": {
      "filePath": "contents/anime/$animeId.lazy.tsx"
    },
    "/edit/anime/$animeId": {
      "filePath": "edit/anime/$animeId.lazy.tsx"
    },
    "/data/anime/": {
      "filePath": "data/anime/index.lazy.tsx"
    },
    "/search/anime/": {
      "filePath": "search/anime/index.lazy.tsx"
    },
    "/edit/new/anime/": {
      "filePath": "edit/new/anime/index.lazy.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
